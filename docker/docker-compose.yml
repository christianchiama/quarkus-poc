version: '2.1'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 9080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    restart: on-failure
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
  consul:
    container_name: consul
    image: consul
    restart: on-failure
    ports:
      - "8500:8500"
    #volumes:
    #    - ./consul-volume/data:/consul/data
    #    - ./consul-volume/config:/consul/config
  mongodb:
    container_name: mongodb
    image: 'mongo:4.4.3'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 250977cc
    ports:
      - 27017-27019:27017-27019
    volumes:
      - ./volumes/mongo:/data/db

  customer-service:
    container_name: customer-service
    build:
      context: .
      dockerfile: ../services/customer-service/src/main/docker/Dockerfile.native
    image: services/customer-service:native
    depends_on:
      - db
      - jaeger
      - consul
    environment:
      MICRONAUT_ENVIRONMENTS: prod
      SERVER_PORT: 8080
      JDBC_HOST: db
      JDBC_PORT: 5432
      JDBC_USER: postgres
      JDBC_PASSWORD: postgr3s
      JDBC_DB: customer_service
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
      JAEGER_HOST: http://jaeger
      JAEGER_PORT: 14250
      KAFKA_HOST: kafka
      KAFKA_PORT: 29092
    ports:
      - "8080:8080"
